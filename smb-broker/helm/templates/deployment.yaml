---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "smb-broker.fullname" . }}
  labels:
    app: {{ include "smb-broker.name" . }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: create-pv
rules:
  - apiGroups: ["v1", ""]
    resources: ["persistentvolumes", "persistentvolumeclaims"]
    verbs: ["get", "list", "create", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: smb-broker-pv-roles
subjects:
  - kind: ServiceAccount
    name: {{ include "smb-broker.fullname" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: create-pv
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: create-secret
rules:
  - apiGroups: ["v1", ""]
    resources: ["secrets"]
    verbs: ["get", "create", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: smb-broker-secret-roles
subjects:
  - kind: ServiceAccount
    name: {{ include "smb-broker.fullname" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: create-secret
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "smb-broker.fullname" . }}
  labels:
{{ include "smb-broker.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "smb-broker.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "smb-broker.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "smb-broker.fullname" . }}
      automountServiceAccountToken: true
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TARGET_NAMESPACE
              value: {{ .Values.targetNamespace }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v2/catalog
              port: http
          readinessProbe:
            httpGet:
              path: /v2/catalog
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
